<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hxy.core.resource.dao.ResourceMapper">
	<resultMap type="com.hxy.core.resource.entity.Resource" id="resourceResultMap">
		<id column="id" property="id" />
		<result column="name" property="name" />
		<result column="url" property="url" />
		<result column="pid" property="pid" />
		<result column="iconCls" property="iconCls" />
		<result column="type" property="type" />
		<result column="seq" property="seq" />
		<result column="flag" property="flag" />
		<collection property="roles" ofType="com.hxy.core.role.entity.Role">
			<id column="roleId" property="roleId" />
			<result column="roleName" property="roleName" />
		</collection>
	</resultMap>
	<select id="selectAll" resultMap="resourceResultMap">
		select re.*,ro.* from
		resource re left join role_resource oe on
		re.id=oe.id left join
		role ro on
		oe.roleId=ro.roleId
		order
		by re.seq
	</select>
		<select id="selectAllOrderById" resultMap="resourceResultMap">
		select re.*,ro.* from
		resource re left join role_resource oe on
		re.id=oe.id left join
		role ro on
		oe.roleId=ro.roleId
		order
		by re.id
	</select>
	<insert id="save" parameterType="com.hxy.core.resource.entity.Resource">
		insert into
		resource(name,url,pid,iconCls,type,seq,flag)
		values(#{name},#{url},#{pid},#{iconCls},#{type},#{seq},#{flag})
	</insert>
	<insert id="save2Id" parameterType="com.hxy.core.resource.entity.Resource">
		insert into
		resource(id,name,url,pid,iconCls,type,seq,flag)
		values(#{id},#{name},#{url},#{pid},#{iconCls},#{type},#{seq},#{flag})
	</insert>
	<select id="getById" parameterType="long" resultMap="resourceResultMap">
		select *
		from resource where id=#{id}
	</select>
	<update id="update" parameterType="com.hxy.core.resource.entity.Resource">
		update resource set
		name=#{name},url=#{url},pid=#{pid},iconCls=#{iconCls},type=#{type},seq=#{seq},flag=#{flag}
		where id=#{id}
	</update>
	<delete id="delete" parameterType="list">
		delete from resource where id in
		<foreach collection="list" item="ids" open="(" separator=","
			close=")">
			#{ids}
		</foreach>
	</delete>
	<!-- 中间表 -->
	<delete id="deleteRoleAndResource" parameterType="list">
		delete from role_resource where id in
		<foreach collection="list" item="ids" open="(" separator=","
			close=")">
			#{ids}
		</foreach>
	</delete>
	<select id="selectByNameOrUrl" parameterType="map" resultMap="resourceResultMap">
		select * from resource where (name = #{name}
		<if test="url!=null and url!=''">or url = #{url}</if>
		)
		<if test="id!=null">
			and id!=#{id}
		</if>
	</select>
</mapper>