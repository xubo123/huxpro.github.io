<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hxy.core.appuser.dao.AppUserMapper">
	
	<select id="count" parameterType="map" resultType="long">
		select count(au.id) from app_user au
		<where>
			<if test="user_id!=null and user_id!=''">
				and au.user_id like concat('%',#{user_id},'%')
			</if>
			<if test="user_name!=null and user_name!=''">
				and au.user_name like concat('%',#{user_name},'%')
			</if>
		</where>
	</select>
	
	<select id="query" parameterType="map" resultType="com.hxy.core.appuser.entity.AppUser">
		select au.*,GROUP_CONCAT(REPLACE(c.fullName,',',' ')) as fullClassName
		from app_user au
		left join userbase_info ui on FIND_IN_SET(ui.user_id,au.student_id)
		left join class_info c on ui.class_id = c.class_id
		<where>
			<if test="user_id!=null and user_id!=''">
				and au.user_id like concat('%',#{user_id},'%')
			</if>
			<if test="user_name!=null and user_name!=''">
				and au.user_name like concat('%',#{user_name},'%')
			</if>
		</where>
		group by au.id
		limit #{start},#{rows}
	</select>
	
	<select id="getById" parameterType="long" resultType="com.hxy.core.appuser.entity.AppUser">
		select au.*,GROUP_CONCAT(REPLACE(c.fullName,',',' ')) as fullClassName
		from app_user au
		left join userbase_info ui on FIND_IN_SET(ui.user_id,au.student_id)
		left join class_info c on ui.class_id = c.class_id
		where au.id = #{id}
		group by au.id
	</select>
	<select id="getByUserId" parameterType="string" resultType="com.hxy.core.appuser.entity.AppUser">
		select au.*,GROUP_CONCAT(REPLACE(c.fullName,',',' ')) as fullClassName
		from app_user au
		left join userbase_info ui on FIND_IN_SET(ui.user_id,au.student_id)
		left join class_info c on ui.class_id = c.class_id
		where au.user_id = #{user_id}
		group by au.user_id
	</select>
	
	<delete id="delete" parameterType="list">
		delete from app_user where id in
		<foreach collection="list" item="ids" open="(" separator=","
			close=")">
			#{ids}
		</foreach>
	</delete>
	
</mapper>